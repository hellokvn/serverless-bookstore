schema {
  query: Query
  mutation: Mutation
}

type Query {
  # getBookById(bookId: ID!): Book! @aws_iam
  getBookById(bookId: ID!): Book!
  listBooks(limit: Int!, nextToken: String): BooksPage!
  myOrders(limit: Int!, nextToken: String): OrderItemsPage!
}

type OrderItemsPage {
  orderItems: [OrderItem]
  nextToken: String
}

type OrderItem {
  userId: ID!
  orderId: ID!
  book: Book!
  quantity: Int!
}

type BooksPage {
  books: [Book]
  nextToken: String
}

# type Book @aws_iam @aws_cognito_user_pools {
type Book {
  bookId: ID!
  title: String!
  description: String
  imageUrl: AWSURL
  author: String!
  price: Float!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Mutation {
  createBook(newBook: BookInput): Book! @aws_auth(cognito_groups: ["admin"])
  createOrder(newOrder: OrderInput): Boolean!
}

type Subscription {
  onCreatedBook(author: String!): Book @aws_subscribe(mutations: ["createBook"])
}

input OrderInput {
  items: [OrderItemInput]
}

input OrderItemInput {
  bookId: ID!
  quantity: Int!
}

input BookInput {
  title: String!
  description: String
  imageUrl: AWSURL
  author: String!
  price: Float!
}
